 [HttpPatch]
        public void CreateTable()
        {
            Task.Run(async () => { await Initialize(); })
                  .GetAwaiter()
                  .GetResult();
        }

        private static async Task Initialize()
        {
            string storageConnectionString = "DefaultEndpointsProtocol=https;"
                + "AccountName=azurestorageemanuel"
                + ";AccountKey=O3jxhVjbZi6ua37j/Nw20NU1QgMxw1CakID2H633s/KfWGO1nRbKW0kTsr5KWiD71/2qAAzv2JPDh8dIFqnqNg=="
                + ";EndpointSuffix=core.windows.net";

            var account = CloudStorageAccount.Parse(storageConnectionString);
            tableClient = account.CreateCloudTableClient();

            studentsTable = tableClient.GetTableReference("students");

            await studentsTable.CreateIfNotExistsAsync();
        }

        [HttpPost]
        public void Post([FromBody] StudentModel student)
        {
            Task.Run(async () => { await AddNewStudent(student); })
                .GetAwaiter()
                .GetResult();
        }

        [HttpGet]
        public List<StudentEntity> Get()
        {
            List<StudentEntity> students = new List<StudentEntity>();
            Task.Run(async () => { students = await GetAllStudents(students); })
                .GetAwaiter()
                .GetResult();
            foreach (var student in students)
            {
                Console.WriteLine(student.FirstName);
            }
            return students;
        }

        private static async Task AddNewStudent(StudentModel student)
        {
            var studentTemp = new StudentEntity(student);


            var insertOperation = TableOperation.Insert(studentTemp);
            string storageConnectionString = "DefaultEndpointsProtocol=https;"
                + "AccountName=azurestorageemanuel"
                + ";AccountKey=O3jxhVjbZi6ua37j/Nw20NU1QgMxw1CakID2H633s/KfWGO1nRbKW0kTsr5KWiD71/2qAAzv2JPDh8dIFqnqNg=="
                + ";EndpointSuffix=core.windows.net";

            var account = CloudStorageAccount.Parse(storageConnectionString);
            tableClient = account.CreateCloudTableClient();
            studentsTable = tableClient.GetTableReference("students");
            await studentsTable.ExecuteAsync(insertOperation);
        }

        private static async Task<List<StudentEntity>> GetAllStudents(List<StudentEntity> students)
        {
            TableQuery<StudentEntity> query = new TableQuery<StudentEntity>();
            string storageConnectionString = "DefaultEndpointsProtocol=https;"
                + "AccountName=azurestorageemanuel"
                + ";AccountKey=O3jxhVjbZi6ua37j/Nw20NU1QgMxw1CakID2H633s/KfWGO1nRbKW0kTsr5KWiD71/2qAAzv2JPDh8dIFqnqNg=="
                + ";EndpointSuffix=core.windows.net";

            var account = CloudStorageAccount.Parse(storageConnectionString);
            tableClient = account.CreateCloudTableClient();
            studentsTable = tableClient.GetTableReference("students");
            TableContinuationToken token = null;
            do
            {
                TableQuerySegment<StudentEntity> resultSegment = await studentsTable.ExecuteQuerySegmentedAsync(query, token);
                token = resultSegment.ContinuationToken;
                foreach (StudentEntity entity in resultSegment.Results)
                {
                    students.Add(entity);
                }
            } while (token != null);

            return students;
        }
